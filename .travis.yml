# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Don't need docker, setting "sudo: false" has faster startup by using a container instead of VM
sudo: false

language: java

matrix:
  include:
    - name: "Java 8 EN"
      jdk: openjdk8
      env: USER_LANGUAGE=en USER_REGION=US'
    - name: "Java 8 FR"
      jdk: openjdk8
      env: USER_LANGUAGE=fr USER_REGION=FR'
    - name: "Java 8 JA"
      jdk: openjdk8
      env: USER_LANGUAGE=ja USER_REGION=JP'
    - name: "Java 11 EN"
      # Do not specify "jdk:" here, install-jdk.sh will download the JDK set JAVA_HOME appropriately
      env: USER_LANGUAGE=en USER_REGION=US'
      before_script:
        # Download the newest version of sormuras' install-jdk.sh to /tmp
        # install-jdk.sh is used by Travis internally, sormoras is the maintainer of that script
        - wget -O /tmp/install-jdk.sh https://github.com/sormuras/bach/raw/master/install-jdk.sh
        # Need to specifically install AdoptOpenJDK 11.0.4 (Linux, HotSpot) since Travis does not offer it by default
        # The link to the AdoptOpenJDK 11.0.4 .tar.gz is taken directly from AdoptOpenJDK's website
        - source /tmp/install-jdk.sh --url 'https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.4%2B11/OpenJDK11U-jdk_x64_linux_hotspot_11.0.4_11.tar.gz'
    - name: "Java 12 EN"
      jdk: openjdk12
      env: USER_LANGUAGE=en USER_REGION=US'

os:
  - linux

before_cache:
  # Remove nifi repo again to save travis from caching it
  - rm -rf $HOME/.m2/repository/org/apache/nifi/

# Caches mvn repository in order to speed up builds
cache:
  directories:
    - $HOME/.m2
    - $HOME/.npm

# before_install aids in a couple workarounds for issues within the Travis-CI environment
#   1. Workaround for buffer overflow issues with OpenJDK versions of java as per https://github.com/travis-ci/travis-ci/issues/5227#issuecomment-165135711
#   2. Workaround for non-existent Maven repository as per: https://github.com/travis-ci/travis-ci/issues/4629#issuecomment-131214465
before_install:
  - sudo hostname "$(hostname | cut -c1-63)"
  - sed -e "s/^\\(127\\.0\\.0\\.1.*\\)/\\1 $(hostname | cut -c1-63)/" /etc/hosts | sudo tee /etc/hosts
  - sed -i.bak -e 's|https://nexus.codehaus.org/snapshots/|https://oss.sonatype.org/content/repositories/codehaus-snapshots/|g' ~/.m2/settings.xml
  - echo "MAVEN_OPTS='-Xmx2g -XX:+UseG1GC'" > ~/.mavenrc
  - cat ~/.mavenrc
  # Remove nifi repo again to save travis from caching it
  - rm -rf $HOME/.m2/repository/org/apache/nifi/

install: true
    
script:
  # Replace variables seems to be the only option to pass proper values to surefire
  # Note: The reason the sed is done as part of script is to ensure the pom hack 
  # won't affect the 'clean install' above
  - bash .travis.sh
  # Output maven version info to display the Java version used by maven
  - mvn -v
  - mvn -T 1C clean install -Ddir-only -Pcontrib-check,include-grpc,include-atlas,include-hive3 -Ddir-only | grep -v -F -f .travis-output-filters && exit ${PIPESTATUS[0]}
